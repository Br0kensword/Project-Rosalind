dna = "TTTCATCAAATTGATCCCGGCCTCCTACGGACGCACTGTTTCACATAATCATGGTCGAGAGGTTATCGACCCGATCCAAAGTTCGCGGTACCCACATTGACTCGTAGTCCGTCATTACACATGTGGGCCTACCTGGACCAGAAAGATCGAACCCGTTATACGGTAGGTAGCTCTTACGCGCGACTATCAACTTCCTAGTAAATTCCACATACAAATTTGAGATAAACCTGAAGCAACGCTGCGTCGTGCAAGCGTCACTCTGCGAACTCAAGGAGCACGTACGGCACATTACGTCTTGTGCAGAAATTGCGTTCACTACTTTTCGAGGGTCATAAACCCGAGCGGAGACCGAACTCGGTGCTAGGAAATGGCAGTCTTATGGGTGCTCTGTCTCTTTACCCAGCGGGACCAAAAGCCCATGGATGCCCCGCTCGACTATTAGCGGTGATCGAGTCCATGGGCGTCCTTACCTGGAGAGGTTTGCACGTTCAACATTTAGGCGACTGGCGCCATTCGGTTAATCTTCGGGGCTTTTCCCTCGGTTAGCGCTCAAAGGGTCTGAATTCTTGGTTCGATTCTAGCTCGAAACCCCACTAGCATCGGATTCAAAGGGAATACTTTTCGCTTGGAAATGGTCTGGGGCACGTACTGGTGTTCGGGCAACTCTGCACTCGGGCATCTTAAGAAATACGTATGTCGCACGTGAATTTATTCCTCGTGCGATACCATCTTTCGGCTTTAGTTATCGGTTATGAAATGACTAAAAGACGTCAGGTTTGATAGAGCGATTTCCTTAGGGAACCATGACCTATTTTCCACTCTGGGCTAGTCTGGAAAAGGGAGGGCTGGAACGAATTGAACGAGGAGAAACCTTCCGACTAGCGACACCCCTTCTTGCGGCAAAACCATATTCCAGGG"

compliment = " "


def coder (dnaA, dnaB) :
    for x in dnaA :
     if x == "T":
        dnaB += "A"
     elif x == "A":
        dnaB += "T"
     elif x == "G":
        dnaB += "C"
     else:
        dnaB += "G"
    return dnaB
 
compliment = coder(dna, compliment)
  


def bunnies (month, rate) :
    A = (rate * 2) + 1
    B = rate + 1
    x = 0
    
    while x < (month-3) :
        count = A
        B = B * rate
        A = A + B
        x += 1
        print B
    return count


##print compliment [::-1] 
print bunnies(6, 3)



#code for Counting Point Mutations
dna_1 ="TGATCAAGCTCGTCACGGACGGCCGTTTCTTCATAGACTCGATGGGGGCAAACCTTACCCACTGGACCCTGGGCTGGAGCACGTTTTTCTCAAATCGGGATCCCTGCCCTTGTGTGTGCCTTGTGCTATGGCCCATAGTCGCTCGGGGGTCGACGATTGTCTATAAACGATGTGTTAGTAGGATTACCTTACCGGTCGTACCCAACGGGACCCTAGTTCGCCTTTCGCGGTCACAAAAGTCAATAACGTAGCTCATCTGTTGGAATCATCGACGAGACAACAGTTGGGATAGCTACCTGATACGTGTTCACACCGGGGCATCCCCTGGCAACCAAGCAGACCTAGGACTGAACTTTTCCCCATCAAGAGAGCTCGCTACATGTTTGGGGCTGCAACACGCCTGATCGGCTGGACCACTCAGAATGGTACCCCCGTGTTGGAGACCTGCATAATAGATTTCATAGACCGCCCCAGAGTCGTCTAAGGTATCGTCGCAAAAAGTCGCGATAACGAAGTCAGATAGACATGTCCTTAAGCTCACCTTTACGCGGGTATGCCGGATCAGCCCTGGATGGACTTCCATGTCCGTACTCTGACGAATCCACGAACCCCCAATCGGAGTCTCATACTACAGGCAGGTGATTAACACAATATCGGCCATGAGTTTGCGTCAAATGCAGACTGAGTTTCTTGATTCCGCAGCTGCCTGTTGTTTGCTGCCCTTTGAGGACCAACATGAAATATCACAGTTACAACTAACGTGACGAGCTATGCCCCCAGCAACCGCTATAGGCTGGTACGTGATCGAGAGTGCCTAGCAGCCGATCTTCAGCGCCCGCCGCATGAGCGCTTGAGCCGAATTTCGAGTATCCGGGCAGGACCAGGATCAACCGCAATATTAGTTCTCCGATGCACTCAGCATCTGCGTCTGCGGTTAACGTGTCGTAGGT"
dna_2 = "TCACTAAGCAGGTAGTGTACGATAGTTTCTGATACCCCTCGACGAGGGCTATGTTTTCCTACAGAACCCTATTGATATGCAACAATTTCAGCACTATATCCCCCGGGTGTTGATCGTGGGAAATCTGATTAGCCACTTTCGGTCCATTGCCGATGTTATTCTATTAAGGATCGATGTGTAGGATCGCCCCTATGGTACCATCCGCACTGCTGTAATCTCTTATGACCCGATCCTTATGCATAGTAACCCTTGTCGCGTGTTAGGATATTTGGATCGAAGACATGATGGATGACTATGTGACCGGGATGCATATCCCATTATTCCCTAGCAACCAGCCAGCTCCGGAATTGATTCTGTTGTCATCATAGGCGGTTACTACTTATAGCGCCCGGCTATATCTCTTTCCGGCGTATCTACCCAGAAGGTGCCGCCCCTCTTAGCGATGTGCATAGTACATTAGTGCAACTTACTGATATTCGTCCAAGGCATCCTCCCAAACTGACACCAATACCAAGATGGTGGAATTTGCCGATATGGTTGCGCTTATGAAGGTATGATGTTTAGTCCACTGTGTCATATTTATGCGCTTACTGAGACCAACCCTCGAATCCCAAGTAGCAACTCTATAACCAAATTACAGAAATCCCACAATAGACCGCATTAAAGAACGTTCGACCCGGATAGAATATTGGCATGCCACTGTTGATCATGGATTACTTCCCTACTAGAAGTAATTGAAATCGACTCAGTCTAAATTGTTAACTTGAAGAATGCTAGCGACTACCCCTTTACATCGTTTCGTGGTCGGCCCTGTTCGACCAGGAACTCTGGACGCGTGCCGCTACGCTGTGTATGGCGCACGTCGCGGATCCGGACATCGATCGCGGAAAACGACTTTCTAGAACACCTATGTACTCGTCTGAGTCGGGTCCGAACGAAGAGACCTATAT"
count = 0
x = 0
length = len(dna_1)



print (length)

while x < length :
    if (dna_1[x] != dna_2[x]):
        count += 1
    x += 1
    
print(count)
#answer = 485

#reading rna codons and translating them into proteins very slow

map = {"UUU":"F", "UUC":"F", "UUA":"L", "UUG":"L",
    "UCU":"S", "UCC":"S", "UCA":"S", "UCG":"S",
    "UAU":"Y", "UAC":"Y", "UAA":"STOP", "UAG":"STOP",
    "UGU":"C", "UGC":"C", "UGA":"STOP", "UGG":"W",
    "CUU":"L", "CUC":"L", "CUA":"L", "CUG":"L",
    "CCU":"P", "CCC":"P", "CCA":"P", "CCG":"P",
    "CAU":"H", "CAC":"H", "CAA":"Q", "CAG":"Q",
    "CGU":"R", "CGC":"R", "CGA":"R", "CGG":"R",
    "AUU":"I", "AUC":"I", "AUA":"I", "AUG":"M",
    "ACU":"T", "ACC":"T", "ACA":"T", "ACG":"T",
    "AAU":"N", "AAC":"N", "AAA":"K", "AAG":"K",
    "AGU":"S", "AGC":"S", "AGA":"R", "AGG":"R",
    "GUU":"V", "GUC":"V", "GUA":"V", "GUG":"V",
    "GCU":"A", "GCC":"A", "GCA":"A", "GCG":"A",
    "GAU":"D", "GAC":"D", "GAA":"E", "GAG":"E",
    "GGU":"G", "GGC":"G", "GGA":"G", "GGG":"G",}
 
codon_string = "AUGGUGCAGGUAUACGGUCGUACUAUACUGUUGCGGCUUCCCAACUCUAGGCCAAGACAUAUUAGGCAAUUGCGUAAAUCUAAGGGUUCCAAGAAAGCAAGCUUACAACUUUGGGAAACGUGUUUGCUAAGCACAGCGUCACUAGUAUCCUCUGUCGAGCGUUACUUCUGGCUGAGACUACCUACAUCUAGUCGCCGCCUAUCUACUUGCUACCUCAAUAACGACUCCGACCUCAAAAAUGCCUUUUCGCAUUCAUGCUCCCUGCGUGUUUUACCGAAACAUGCUGAUUGCUCUCAUACUCAAUCUUGCUGUAACCGCUCAGUCAGGGUUUUCGUGGACCUAACUUACCGCAGGUUAAGUACGCUAGUGGGCUCUACAAUGCUUGCCAACUGGCGGUCGCACAAGUCGUUUAGAUGUAAUUCCUACAGACUAUCUUGGGAGGGACAUGCUUUGUUAGAUUCCGUCCAGCUCCCGAAAACAUGUAAGAUGUCUACUGUUCCUUCUGCACCUAUUACAACGUACGUAUGUGUGACCUUUUACUCCUCGAGUCCGUAUUAUAACGACCAAGAAUCAGCUUCACACGACGACAGAGGGCCGCAUCAGUGUAUGUUAGAAACUGCGGGACAUGGAAUGACUGAUGACGUAACGUGGCAUCUUAGCCAAUCUUUACGGAUAUUGAUGUUACCGCGCCCAAAACCCCAGAUUGUGAAAGCGAGUCAAUUUAGGCACUGGUCAUACUUUGGGCGAGAGAUUCUAUCGGACCAUCGCAAUGCGUGGGGAGUAGCAUCAACUGUAGUGCUGGGACCCGUAGGGAUGCACGAUACGAGAAGCAGACCGUCGAAGCCCGAAGCAGGUGACAUACAUGGACGCGGCAAUGGAUGUGCGAUGCCAGGUUGUAACGAAUCAAUUAACAUUCAAGGUCGCGUAGUAACGAGAGAGCCUAACGAGCACCGAGUAGGGUCGGCCCGUUCAUGUGAAACAAGACAUCCACGAUCCGGCCGAAUUUUCCUAAUGUCGGUGCCUCAUAGCGGAACAAUUAUGCAUUAUCUAACGUCAGACCAAACACACCGCCCACGCGGGAGCCACUGGCACGGAGGGGUAGGGUUCCAUCGGGCGGGUCGUCCGCAAACCAACCUUGCUCCGGUAAUCGUAUCUUAUAGGCGGAAAAAACUACUCGCUCUUGACCCUGUGCUCUCUCGUUGUGGUAUCCUGUUGCCAUCUGAUACGGAUACAAUCCUACCAGGUGUACCGCCAGGUCGCAGUGACUUCAUAGAUCGCUACACAUCUAUAACGCUAAGGUGGACGUGUGGCGAGAUAAGACACAUAGUCUCCUUUCCGUCUAUGUCCAUGCCUGCUAAUACGUUUUUCACUACCUUUCCGCUAGGGGGACCGGUUGUGCUGCAAUUAUCUAAGCCUGAGUUUUCGUCGAGAAGGACGCCACGAUGGCUCGCUUGCCCGAUAGGAGGGAGCGGGGUGCCAAUCCUACCUGCGAUGAUAGAGAUGACGCGAAAUCUGCGCAUUCGGACAACUGCUAUAAGAAAGCCCUCAGCCCUCCAGGCCGUGAAGAUGCCUCAACGGGAUGCCAUAGUCGAUCAGCGUGUGGCUCAGCUUAGUGCAGAUUCGAAUUUAAGAACGUUCGGUCUGUCUCCCUCUCUCCGUGUUAAGAAACAUUUCGUGGUCCUGACCCUCUUACUUGUGAUUAUGCCCGGUUAUUUGCUUGGUUAUCGAACAGCAUUUCUUGCGCAAGCUAGUGCACCGGGCAUAAUAGCAGUUGCCUACAGCGAGCUCGGAACACAUCUGAUGCUGAGGCCGAGAAAAGAAAUUAACAAGAAGCUUUUGAAGCAUUAUGGACCGUGUCCAGGAAACUUGAGCUGCUACAGUUUGUUCUACGAAGCGCCGAACAUGGCUACUGAUCUCACUCUGCGGCCACUCCUAUCUCAAUCCAACUCGACACGAAGUUGGACUAGAUGCAUUCUCAUAUUGUGCCGACCGCCGGUCAAGUCAGGGAUUCUCACUUUUAAAAACAAUUGUAAUCACCCUAUAGGGACACCCGCCGGGUAUUUAACGGGGACGAACCAUGUUAAGCUUUGCACUACUCAAAACAAAAUGAGGUCUCGUGGAUAUCGCAUCUGGGUCCUACGUUCGAAGAUCUACGAGAAUGACAAGAAUGUGCGUCGAGCCAUGUUGAUGGGUAAUUGCAACCUCGUGGGACUACCGCAAACCAGCACGAAGGGCAGGAUAAGCCGCAGCACCAAGGCGUAUCUAUUGCGUCUGAACUAUGUAAACACCUUAGAAUCCUGCGUAUGCAUGGUGGGCCGUGAUAUCUGUGCUGAAUGCGGUGACGGUCAUGGCGCUCAUACGAUUAGUUCUGUCUUCUUAUGUACGCGAGUAAAAGGCCCCCCGGGCGCCAUAUGCCGGGCCUAUCCGGGACGAAAUUCCGGUAAUCGGGAUCCGGCUAAUAGAACUAGUAAAGUAGCAGAUGGUCGCUGGCGGGUACGUAGCGUGGACCACACGCAGCCUGUUCACACUGACGUUGCCAAUUACCGAAGAGACGUCCUUCCAGAUCGUCUGGUGAGUCAAGACCAAUGCGGGUCAGACAGUUAUACUACUUUGUGGUGCUGGUGCAAGUCGGUUUCUUUUCGUGGGUCCACCGGACAUUGCAGGUUUAUUAUCAGGUUCGUUGACCCUCACGAAUCAGAUCACGCUUGUUUCUAUUUUAAAGGUGUGAAAGGGUGGAAGCUGGCAAGACGCACGUUUUUUACGAGAAGCAUCUGGAUAAUGUAUAGAGGCGAAACCUUGCCUUUGUUGUCCAUAAUCGCAGGGUCUGUCCGUUCAGGUAGGUGGAUGACGCUCGCGGGCAGUAGAAAGCGGCUCCUGUUGCUCAAGGGUGGGAUAGCGCGGCCUUCGAUGAACUUCGGCUCAGAUCGAAACGAGAGAGGUAUACCUUGUGAUUUUCUUGUAGGUCACUCAUUUCCUGAGGUGAAACGAUUUGGCAAUAAGCUUCCAUUUUUUGACCAACACACAUUCCCUCCUACCCCAAAUAACAGGAGAACACCAUGUUACCUGCUGCACGCCCAGACCAGUAACCUGGUGCCUAAAAAAAUACCGGAUGAGGGCAUUAGCGUCAUCGCAGUAAGAUUGCAGUAUAACGCUGAGGUGGCCCAGCGAGCAUUGGCAGAUACCGACGGCUGUAACUGCAGGAUUUCGACGAUCCUCUGUCUAUUUGUCUUCAAAUUGGCUUAUGUGGGCAAUUCCUUAGAAUCAUCUUUUCGUGUGCACCCGUGUCGUUCCCGCUCUCAGCGAACACGGAACCCCGUUUCCUUUCCGUUACAGAAGGUUGGCCUGAGGCAGGACGUAGCAAUCGAUCGUGCGCGUUUCCUGAAGAGUGGAAGUUGGUUCACCACAUUAACUCGGAUUCGUAAUUGGGAACUUCUAUUAUUCGGGGAAGCGGCGUACGAGGUGGUGUUUUCUCCUGUUUCAUCUUUUAUCUGGCAAUGGGUAAAACUCCAUCCGUACAUAGCUGGCCCAGUUACAACCUUCAUCGUACCUAAACGGAACGAUCGUGUCGAACGGAGAAGCAGAUCUGAGCAUCUGUCAGAGGCUAUAGACGCCGCCGUUGGCCUUGCGGACAUGCGUACGAGGCUUACGUUGUCCCGGACAGGGCAGGCAUACCAGUCCCACUAUACUAUAUCUACCGUCCAUGUCAGUCGAAGCGUUGCUGCAGAGAGGAGGAGGCAGGCUGCGGCGUCCCGGCAUCUACCUAGAACUCGAGUUAAUAAUAAUCCACGCGAGCUUGAUUCGUCGUUGGGCUAUGUAAAGUUCCAACCUAAGCGCAUACAGGUAAGCAAAUACCUGCAGAACGGGAUUGCCUACGGCGAACUAUCUGUUGGCGUGCGAUUGCCAGGCAAUUCAUGCCCAGCAGCAACCUAUCCUCUCAGGGUGUGGGCUUGUCCUCUGUUCCCGUUAACGGGGUUUUACCCUCGCACGCAAGGAGGAAUGUGCCCCAAUGUAAUCAAUAGCCGAUCCGGGACAGUAAACCGGUGGGUAAAACAACACUGCAAGGUUAGCCUGCUCGUAGGUCCCCUGACUUCACGCUUAGCCAGCGGCAUGGACGAAAUGCGAACUGCGGGACAUUCAUUAUGCAACAGCAUGCUUACUGAGUUUGAGGUGAUCUUCCAGCAAAAUAACUGCCAUAUAUCCGCUGCGAUAUUCCCUCUCCACAAGCUGACGAGUCGGACUCCGUUUCUGUUCAACCAUACCCAACCUGGGGCGGAAAACUGCCCUUCGCUGCUUAAGGUGAAACCAAUCCGCCGAUGCCUAGUGACUACUUUGGUAAGGUGCUCUCUAUGGUUGUUAUUACCCGUUUCUUCGCUUGUUAAUUUGGAACUAGUGUUGGGUCACCUCCUCUGGGUUCGCCCUCCAUACCCUCGCGCAAUCAGACCUACGUUGAUAGAGGGCGUAGGGCCACUCCUAAGCAACGGAUAUAACACAGCUGAUUUUCCCGCGAUGUAUUAUCAUCCGAAAGAAGCUUUACAUUUCGUGCAUCUUUCCGUGGCUCACGUCGCAUCAAACUCCACCGCUUACACACAAUUUCAAGCCACGGAGGGAAUGCAAUUGUUGAGGCUUCCGUCAAGAAAUCGAGUUAUCUCUCCGUGCUUCUUAGGUGCAAGGGUUUGGGUAUCCUACCACAUGACUUCGGACUGCGGAGAUUCCAUUCUCUCUAACUGCUUCGUAAUUCCACGCGAUAGUAGAGGACAUAAACGUCCAUUUGCACGUUUCUCUUCGCACCCCAAGGGCAAGCGAAUAAGAUUUACAGACUCCUUUCUCUACUGUGUUGGACUUGAUGAGUGGUUCCCGAAAUGUCCCCUGAGCACACCCCCUCGUCAUGAGCUAGUUACGGAAAAGCGACACAAAUGGGGGCAGUCACUAGCAUCGAUUCUUUCUUUUUCGGCUGUCCAACAGUCCCUUCAUAGCCCGUCGGUGGGUCGCUUUACUCGAACUCGGCGCCCUAACGCCGAUCAGCGGCAGGGUAAUAUGGCCCGUAGUAAAUACAACGCACAUGCUAUCGAUACCGGAUCAUUCUGCAGGAUUGUCCGCUCGAACUCACCGAACUUCAUAAUGGUAGGGUCAGCCAGAUGUUGCCGUUCUGGAGGACGGAGGAGAUACUCUGUGAUUAACUCGGAAGUUUGCCAUGACGGAUCCGUGGUAUUAAGCCGUUUAGUUCACAGGAUUUAUUGUGUGGCCCAUUUCAGGAGUUUCGGUACCCACUUACGGGCUAUCUAUCCUGGCCACCGCCAUGCGUCCCAAUCGACUGCGAACGUUAGUGACGAACAAACAGCCUUUAUUUUACGUAGGGACUGGGAACUUCAUCACAUCCAAAACACGGCGAGGGGGACCUUGCCAGUCAAAACAAUGAGAAUGCCCUUAGAAUUACUGGCACUAUACUAUCCAAUCAUCUUGGAACGAGAUUUCGAUAGUGUGAUUGACGUCAGUCCCAACAACAGUGACUGUAACAGCCAUAAUUACCCCCGUCAACCCGGAUGGGUUGUACUCGCACCCAGGUACGAUCAUGUAACGGUGUCGCGCGCAUUGUUCACAACGGAAUCCGUUGUCGCGUUUAAACUGAAGGUUCGAUCCUGGUGCCAUGCUAUCCCACUAGCAAAGGGUGUCCAGCCGGCCACUUACGACCCAAUUAAGGGUAUUCUCGGCCUCUCGGAGAUCAUCAACCCAGAGAAGCUCAGCGCAGGAUGUGUCAGCGUUAGCCAAGUGUACUGUUUGUGUCAAUCGUACAACUUGACCAUUUCCUACAGGUCAGCAUCGCGUUCGGGUGUUCGAUGCCGACCUCCGCUGACUCAUCUGGGCAUUUUCACUAUUCCUUACUUAUCAACUACUCCCUACGCACCGUGUUCCACUUGGGCCCCGACGGGAAAGCCGUGCGGUCCUUGCCGCCGUAGAACUAACGUCCCGAGCAGAUGCACCGGGUUGCCGCUUGGGUUUUCCCACGGUUUAUUUGGCGAAGACGGGCCCGUACAACCAAAUCAGGCUAUCUUCACUGUCCACUGUCGUGUUAAAGGUACCUAUGGGCGGGGCCAUUGUGAUGAUGACUUCGAUACACCCCGAAAGCCUUUAAACAGACCCGAAUUAUUCAAGUCGCCCUUUGUACAACAGAUAUCUAGCAAUGACAGGCGAUACAUGACCAGACCAUCAUACAGAUUAGGGGAGUGUACCAGUGUAGGCGUGAUUGCCUUCAGGCCAUUGCAAGUGCCAGAAGGGUGCCGACGUGAAAUCCUCCGGAGUCCGACCAGGUAUGCGUCACCUGAGGGGAAGCUUCACUGCGGGACCCGAAGGCCAACGAAAAAGUUUCUCUGUGUCAGCGUGGUGAUCAGACACCCAGUGUGCGAGUACUUACAAUGCUGUUUAGUGGCGAGGCUCCAACACGGCGACAAUAUACUAGGGAGUACCCUUAACCUCAAAACGGACUCUGGGAAGGGUUUACCCGCGGGUUGGGCUCCACACAAACUCCAAACAACUGCACGCUCUUCAAAAAUUGGCGUCACUACUCGUAACUCUUUCAGUAACGAGUUAUAUCCAACUGGUUCUGGAGUUUCCUUAAGACCUUCUGUUAAUCCGGGAUAUACCCAAAUUGCACCAAGCCAUAGUCACAGUUUACAAUUGAACGGGAACAGCAUCGAGCCCUUCGACGUCGAAACACAGGAGUACAGUGGUUGUACGGAUCAGUUAGGUAGCCUUACCUCGCCUAUGCGUACUAUGCAAAUGGAUAUGCGAGCAUUGCAGUCAGUCCAGCGAGUACUAUCGACGCCUAACGGCGAGGGACGUCCGCAGGCGUUGCGGUGCAAGGUUUUUUUAGCUUGUUUAACUGACUCCAGCACUCUAGAGCGAUCAACGCUUGCGUCAUUAUCUAAAAACCAUCCUAGUCGGUAUUUGCUAGUAUCUUUAAUGGAGAUAUAUGCGCCUGGCGCGGCAGCCCAAGCAGGAAUUUUAAUACAUAUCAAUCGGUCUGGAAUUAUACGGGAUCUCUGCUCCGCAGGAAAUGUAAGAAUUAGACACGCAACGCAAAUCCCACACGGUCGUAGCCCCGUUAAUCGCUGUGCUCGAACUGCAACACGUUGGGAAUCAUCGUUGUCUUCGCGAAGUAGUAUUCCUCCUCCACGGUAUUUGGUUUCCUUUAGCCCUUUUUCGACCUGUGUUUGCCCCCAGGGGUGGGCCUCUGAGUCAGUCCGAGCUCGUACAGUCCAUAGACAGCAGGCAAUUUGCGUCCUAACGUAUAGUGUAAGACCCGUGGCCGGGACUUAUAUAGGGCCUGCUGCGACCUACAUCGCCCGUACUCGGCAUCGGCUUCAGUGCGUUUUAGCGAGGAGCAAUUGUUGUAACACCACACACGGCAUGCAAUCAGACGCAUGUAUUUUGGGCCGUGAGAUAAUGCAAGCACAUCUAAGCAUACGAGAAUACCAGCGCUUUUUAUCAGCUAGGGAUUCCAUAUCGAGAUUCUUCAAAAUCUCGGGGGCGUACGCGACGGAGCAGAUUUCGGAACUCUUUACUGAACCCGUGGGGAAGUCUGGCAGCUGUCAUCGACCGCACUUACAAAAUCAUAUAAUUCAUCGUCCACUAAGCCGUAGAUUGGUAGGUGCAUGUCCCAAACCUGCUACAGAACGGACUAGAACCGCCUAUUUCAUUUGCCCUAGGAUCUCAUCGAGGCUGGGACUGGCCUCGUAUUCACCUAGGUGGAGUCUCCAUCCGCGAACCUUUCCCCGGGUGAGGAACAGCGUAAACUCGUCGGCUGAGAACCCAUUCCGCAACGACUCGCACGAAGCAGUCCAGAUUUCUAUCUUAAGUCAAAGUCCUGUCACGGUCGUACAGUGCGAGCUCUCCGAGGGACCAGGGGGCGAUGCUGGGGACUGUGAUAUGUAUCGAAAGGAAUGCUGUAGCCCGGCCUUACCCAAUCGCUCAAGGCGCCCAUGCGGAGAGGCACGUGAGUCUUCUGCGAAUACACACAGAGUGGGUCGGGCCGAAGUGGAAUCAUUGCCAACUGGGGCGGGUGAGUACUCAACGCAGGUAACCAAAUCCGUUCAGUUUUCAGCCGCAGAGAAAGCUCGCCUCUCUUGUACCCACUUGUGUGGAACACUUCGCCUACGCCGACGCCUUCACAGACCGUGUACUCUGUCACGGUUCAGCGUUCGAAAGACUGACUCAAACCUACAUGCUUUUGCGAUCCUGAACAAAUUUACAUUAGGCGCGGCUGACCGAAUGCGCUUGAGCAGCCCGUUUCUAAAGUAUAAUUUUUGCGAGGAAAAAAACAAUGCCGCACAAGGUGGCCUGGUAGUCGAUAAGGCCAGGAAGUUGCUCUGUGGAAACCCUGACGGCGCAUUAACAACAAGAUGGUAUCAUAGUACUGGAAAAUUUCUAACUAUUACGAUGGCUAGGAAUGAGAGCGCUUAG"
 

def pair_list(list_):
    return[list_[i:i+3] for i in xrange(0, len(list_), 3)]
    
codon_list = pair_list(codon_string)
codon_end = len(codon_string)
protein = ""

for c in codon_list:
    for x in map:
        if c == x:
            if map[x] == "STOP":
                continue
            else:
                protein += map[x]

				
# calculating protein weight

monoisotopic = {"A": 71.03711,"C":103.00919,"D":115.02694,"E":129.04259,
                "F":147.06841,"G":57.02146,"H":137.05891,"I":113.08406,
                "K":128.09496,"L":113.08406,"M":131.04049,"N":114.04293,
                "P":97.05276,"Q":128.05858,"R":156.10111,"S":87.03203,
                "T":101.04768,"V":99.06841,"W":186.07931,"Y":163.06333,}
                
protein = "WQHAHRPFEACPFSIENKNVVWTRNCRGLHEDKTFIPHSMWEQDGVQSDWRRIMIVRESTLFQQIPYRLWGLAVVVRFETQGLKSSILCWVWILMKKREELIVMNLMDTNEICQEGNMAMFYRRPGFCNGDIVPASATEMKNWHWWNVPPRPFMGLQPNLSHVDKMQGLAHDGLRMITNLDSMEHDVLWVEVPSVVWAEQITQTAFQSELSTIVYHQHCDCIPNKPRQGLVDVLKFVFPNEHNISTKKAFMFMCGSYQCSGFQADLYEHAPIQREVRPVQVTNNKMEESWFMDAGTRQEARGFHHSSWCLRAQMPWYDDFKPMAHLIGKTMEGNQYALAPWKLYQCKVTFVVYYMVRELLTLAKNNYDRLPQSKGCMWYSPCPGGVHKCPMIDSYIYINCYEVESHYNSYRLRIQAAWRAMMCITIINDCTCYRFWNMTPVCEVDHKLTIENQTFWAHVAVFEIDREKSDVQEQNSYKWHYDDCWKIHFPACAMWVHNTREQLWIPCDNGADCSAFRKWIHDWAITTYGDFYEDAPSMLALLCLYVCYFKSVEFMLVYYFFWMCRFCKLENKCHSVLQLNPFHCHTAPHMYNKNYIRMTEMTCNHHPVFNGPKMEEYSKWLACFRCMPMNSNPMCLQQGIEFGRMKPICFVMVQTLNGVASDQAHISMNNAFGKDRWEVRCYEWGPVMKMLTRPHNSDTHCCIMIMSWPEQYARDTWFPKDCYMVLFVAWPSDGNKCFVWRTPPYRMNECYQGSCKVRNVPRRYMMEAWKKSRCHNFLTNWNNFVTEPLPMDCNTHRILHIRMHALTACWNDEQCPRCSLGWDETADSGFSVTNRWLEQDFVKSLADHINFPHPRKHELYWELQEPARCEMWAEWKPPNPMEMPFVLTSVWKHSVWRQPRRAYFGPCCEKSKEMQPQ"

weight = 0

for p in protein:
            weight += monoisotopic[p]


print weight   #109071.46089


# Finding a motif in DNA

string = "CCCTTGCCATCCCTTGCTTACAGCTACTGACCCTTGCCCCTTGCCCCCTTGCGGCCCTTGCTCGTGAAGCCCTTGCGCCCTTGCGATGCCCCCCTTGCCCCTTGCCCCTTGCCATTATGGTTTTTACCCTTGCAGGGTCACCCCTTGCTTCCCTTGCTCCCCCTTGCAAGTTCCCCTTGCCCCTTGCCCGCCCTTGCGCGCTCCCCTTGCCCATTTAGCACCCTTGCCCCTTGCTCCCCTTGCCCCTTGCCTACCCTTGCCAACCCTTGCAGCCCTTGCATCCATCGTCTCCCTTGCGACCCTTGCCCCTTGCACGTGCCCTTGCCTGGTACCCCTTGCCCCCTTGCCCCCTTGCCCCTTGCCCCCTTGCGCCCTTGCTCCCTTGCCCCTTGCCCCTTGCCCCTTGCCCCCCTTGCCCGCATTCCCTTGCGCCCTTGCGAGTTACCCTTGCCCCCTTGCCCCTTGCCCCTTGCCTAACCCTTGCGAGCCCTTGCTCCCTTGCGGAGACCCCTTGCCCCTTGCTCCCCCCTTGCCGCCCTTGCCCCCTTGCGTAAACGGACGATCCCTTGCTACACCCTTGCGCCCTTGCATGTATCCCCTTGCTACCACCCCCTTGCGCCCTTGCACTGGGCCCCTTGCATCAACGACTACGCCCCTTGCTTCTAACCCGGTCCCTTGCATCCCTTGCCCCTTGCCCCTTGCGCCCTTGCCCCTTGCCCCTTGCTGCCCTTGCACTAAGCTCCCTTGCCCCTTGCTCCCTTGCATCTAGGCCCTTGCCGGGCCCTTGCGCACTACTCC"

code = "CCCTTGCCC"
locations = []
i = 0

for x in string:
    snippet = string[i: i+9]
    if snippet == code:
        locations.append(i + 1)
    i += 1
    
print locations  #[31, 38, 92, 99, 174, 181, 204, 221, 237, 300, 333, 341, 349, 356, 380, 387, 394, 401, 410, 445, 453, 460, 509, 536, 682, 689, 704, 711, 742]
